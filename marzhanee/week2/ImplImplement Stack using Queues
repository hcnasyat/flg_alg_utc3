class MyStack {
  Queue<Integer> q1 = new LinkedList<Integer>();
  Queue<Integer> q2 = new LinkedList<Integer>();



/** Push element x onto stack. */
public void push(int x) {
	while (!q1.isEmpty()) {
		q2.add(q1.poll());
	}
	q1.add(x);
	while (!q2.isEmpty()) {
		q1.add(q2.poll());
	}
}

/** Removes the element on top of the stack and returns that element. */
public int pop() {
	if (q1.isEmpty()) {
		return -1;
	}
	return q1.poll();

}

/** Get the top element. */
public int top() {
	if (q1.isEmpty()) {
		return -1;
	}

	return q1.peek();
}

/** Returns whether the stack is empty. */
public boolean empty() {
	return q1.isEmpty();
}
}

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack obj = new MyStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * boolean param_4 = obj.empty();
 */
